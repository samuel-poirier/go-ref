basePath: /
definitions:
  github_com_samuel-poirier_go-pubsub-demo_consumer_internal_repository.ProcessedItem:
    properties:
      id:
        type: string
      processedAt:
        type: string
      processedData:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    url: https://github.com/samuel-poirier/go-pubsub-demo
  description: Example consumer API
  license:
    name: MIT
    url: https://github.com/samuel-poirier/go-pubsub-demo/blob/main/LICENSE
  title: Go PubSub Demo Consumer API
  version: "1.0"
paths:
  /api/v1/hc:
    get:
      description: Returns ok if healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: Health check endpoint
  /api/v1/items/processed:
    get:
      description: Returns top 100 last processed items
      parameters:
      - default: 100
        description: Number of items to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of items to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_samuel-poirier_go-pubsub-demo_consumer_internal_repository.ProcessedItem'
            type: array
      summary: Endpoint to get processed items
  /api/v1/items/processed/{id}:
    get:
      description: Returns the processed item found by id
      parameters:
      - description: id of the item
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_samuel-poirier_go-pubsub-demo_consumer_internal_repository.ProcessedItem'
      summary: Endpoint get one processed item by id
  /api/v1/items/processed/count:
    get:
      description: Returns count of all processed items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      summary: Endpoint to count processed items
swagger: "2.0"
