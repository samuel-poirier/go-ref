services:
  publisher:
    image: localhost/go-ref-publisher
    depends_on:
      - rabbitmq
    build:
      context: publisherService
      dockerfile: Dockerfile.development
    ports:
      - 8080:8080
    environment:
      - GOPROXY=direct
      - APP_ENV=dev
      - APP_CONFIG=/app/publisherService/configs/.env
      - RABBIT_MQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq:5672
    volumes:
      - .:/app        # mount source code
  consumer:
    image: localhost/go-ref-consumer
    depends_on:
      - rabbitmq
      - db
    build:
      context: consumerService
      dockerfile: Dockerfile.development
    ports:
      - 8081:8081
    environment:
      - GOPROXY=direct
      - APP_ENV=dev
      - APP_CONFIG=/app/consumerService/configs/.env
      - RABBIT_MQ_CONNECTION_STRING=amqp://guest:guest@rabbitmq:5672
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=demo
      - POSTGRES_PASSWORD=user
      - POSTGRES_DB=demo_pub_sub
      - POSTGRES_SSLMODE=disable
    volumes:
      - .:/app        # mount source code
  rabbitmq:
    image: rabbitmq:4.1.2-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - lab_rabbitmq_data:/var/lib/rabbitmq/
        - lab_rabbitmq_logs:/var/log/rabbitmq/
  db:
    image: postgres:14.1-alpine # Specifies the PostgreSQL image and version
    restart: always # Ensures the container restarts if it crashes
    environment:
      POSTGRES_DB: demo_pub_sub # Sets the default database name
      POSTGRES_USER: demo # Sets the default user
      POSTGRES_PASSWORD: user # Sets the user's password
    ports:
      - "5432:5432" # Maps host port 5432 to container port 5432
    volumes:
      - db_data:/var/lib/postgresql/data # Persists database data

volumes:
  lab_rabbitmq_data:
  lab_rabbitmq_logs:
  db_data:
